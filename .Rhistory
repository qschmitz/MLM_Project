summary(lmer_Chemo_2)
lmer_Chemo_1 = lmer(tumour~sensitivity*line+month*line+(line|patient),data=Chemo)
summary(lmer_Chemo_1)
lmer_Chemo_1 = lmer(tumour~sensitivity*line+month*line+(month|patient),data=chemo)
summary(lmer_Chemo_1)
chemo$month
lmer_Chemo_1 = lmer(tumour~sensitivity*line+month*line+(line|patient),data=month)
lmer_Chemo_1 = lmer(tumour~sensitivity*line+month*line+(line|patient),data=Chemo)
summary(lmer_Chemo_1)
lmer_Chemo_1 = lmer(tumour~sensitivity*line+month*line+(line|patient),data=Chemo)
summary(lmer_Chemo_1)
lmer_Chemo_2 = lmer(tumour~sensitivity*line+month*line+(line|patient),data=Chemo,REML=F)
summary(lmer_Chemo_2)
summary(lmer_Chemo_1)
summary(lmer_Chemo_2)
lmer_Chemo_1 = lmer(tumour~sensitivity*line+month*line+(line|patient),data=Chemo)
summary(lmer_Chemo_1)
lmer_Chemo_2 = lmer(tumour~sensitivity*line+month*line+(line|patient),data=Chemo,REML=F)
summary(lmer_Chemo_2)
# • check if the model’s assumptions hold:
#   – linearity of the relation between the covariates and the response
source('sections/4.2.linearity.r')
# • check if the model’s assumptions hold:
#   – linearity of the relation between the covariates and the response
source('sections/4.2.linearity.r')
#We see the same residual patterns for all month
Chemo.gpdata = groupedData(tumour~sensitivity|month,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
#Patients do not have the same sensitivity evolution at all!
#All lot of our estimates are overestimated
Chemo.gpdata = groupedData(tumour~sensitivity|patient,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
#Tumour cannot serve as random slope for sensitivity
Chemo.gpdata = groupedData(sensitivity~tumour|patient,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
#Month looks like a candidate for a random slope but with a lot of disturbance
Chemo.gpdata = groupedData(tumour~month|patient,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
Chemo.gpdata = groupedData(tumour~line|patient,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
#We see the same residual patterns for all month
Chemo.gpdata = groupedData(tumour~sensitivity|month,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
#No patients seems strange
Chemo.gpdata = groupedData(tumour~line|patient,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
plot(Chemo.gpdata,outer =~Patient)
plot(Chemo.gpdata,outer =~patient)
plot(Chemo.gpdata,outer =~month)
plot(Chemo.gpdata,outer =~line)
plot(Chemo.gpdata,outer =~line)
#We see the same residual patterns for all month
Chemo.gpdata = groupedData(tumour~sensitivity|month,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
#Patients do not have the same sensitivity evolution at all!
#All lot of our estimates are overestimated
Chemo.gpdata = groupedData(tumour~sensitivity|patient,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
#Tumour cannot serve as random slope for sensitivity
Chemo.gpdata = groupedData(sensitivity~tumour|patient,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
#Month looks like a candidate for a random slope but with a lot of disturbance
Chemo.gpdata = groupedData(tumour~month|patient,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
#No patients seems strange
#Line can be used as random slope:
Chemo.gpdata = groupedData(tumour~line|patient,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata,outer =~line)
plot(Chemo.gpdata,outer=~month)
plot(Chemo.gpdata,outer=~patient)
# – presence or absence of interactions between the different “explanatory variables”
boxplot(tumour~patient,main="Tumour responses per patient")#is 19 enough to diagnose patient heteroskedasticity?
abline(h=mean(tumour),col="red")
boxplot(tumour~month,data = chemo,main="Tumour responses per month of treatment")#that's more accurate!
abline(h=mean(tumour),col="red")
# – presence or absence of interactions between the different “explanatory variables”
boxplot(tumour~patient,main="Tumour responses per patient")#is 19 enough to diagnose patient heteroskedasticity?
abline(h=mean(tumour),col="red")
boxplot(tumour~month,data = chemo,main="Tumour responses per month of treatment")#that's more accurate!
abline(h=mean(tumour),col="red")
boxplot(tumour~line,main="Tumour response per line")#which is consistent with less effect of lines through time, less variance
abline(h=mean(tumour),col="red")
boxplot(sensitivity~patient)#clear heteroskedasticity of sensitivity distribution through patients
#sensitivity and tumour should be used as response variable
#clear interaction between month and line to determine sensitivity or tumour
interaction.plot(line,month,tumour)
interaction.plot(month,line,tumour)
#sensitivity and tumour should be used as response variable
#clear interaction between month and line to determine sensitivity or tumour
interaction.plot(line,month,tumour)
#interaction between line and sensitivity?
interaction.plot(line,sensitivity,tumour)
interaction.plot(sensitivity,line,tumour)
interaction.plot(line,month,sensitivity)
interaction.plot(month,line,sensitivity)
#sensitivity and tumour should be used as response variable
#clear interaction between month and line to determine sensitivity or tumour
interaction.plot(line,month,tumour)
interaction.plot(line,month,sensitivity)
summary(lme_Chemo)
#interaction between line and sensitivity?
interaction.plot(line,sensitivity,tumour)
interaction.plot(sensitivity,line,tumour)
summary(lmer_Chemo)
lme_Chemo_no_interact = lme(fixed=tumour~line*sensitivity+month*line, random=~1|patient,data=Chemo, method="ML")
anova(lme_Chemo,lme_Chemo_no_interact)
anova(lme_Chemo_no_interact,lme_Chemo)
lme_Chemo_no_interact = lme(fixed=tumour~line*sensitivity+month*line, random=~1|patient,data=Chemo, method="ML")
anova(lme_Chemo_no_interact,lme_Chemo)
lme_Chemo_no_interact = lme(fixed=tumour~sensitivity+month*line, random=~1|patient,data=Chemo, method="ML")
anova(lme_Chemo_no_interact,lme_Chemo)
interaction.plot(line,patient,tumour)#line has an increasing effect on the patient effect on tumour
plot.design(Chemo)
#Graph shows not heteroskedasticity
plot(lme_Chemo)
plot(lmer(log(tumour)~line*sensitivity+month*line+(month|patient),data=Chemo))
plot(lmer(log(tumour)~log(line*sensitivity+month*line)+(month|patient),data=Chemo))
plot(lmer(log(tumour)~log(line)*sensitivity+month*line+(month|patient),data=Chemo))
plot(lmer(log(tumour)~line*sensitivity+month*line+(month|patient),data=Chemo))
lme_Chemo_log = lmer(log(tumour)~line*sensitivity+month*line+(month|patient),data=Chemo)
plot(lmer(log(tumour)~sensitivity*line+month*line+(line|patient),data=Chemo))
plot(lmer(log(abs(tumour))~sensitivity*line+month*line+(line|patient),data=Chemo))
#Graph shows not heteroskedasticity
plot(lme_Chemo)
plot(lmer(log(abs(tumour))~sensitivity*line+month*line+(line|patient),data=Chemo))
#Graph shows not heteroskedasticity
plot(lme_Chemo)
plot(lmer(log(abs(tumour))~sensitivity*line+month*line+(line|patient),data=Chemo))
#We see the same residual patterns for all month
Chemo.gpdata = groupedData(tumour~sensitivity|month,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
#Patients do not have the same sensitivity evolution at all!
#All lot of our estimates are overestimated
Chemo.gpdata = groupedData(tumour~sensitivity|patient,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
plot(Chemo.gpdata)
#Patients do not have the same sensitivity evolution at all!
#All lot of our estimates are overestimated
Chemo.gpdata = groupedData(tumour~sensitivity|patient,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
#Month looks like a candidate for a random slope but with a lot of disturbance
Chemo.gpdata = groupedData(tumour~month|patient,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
#Month looks like a candidate for a random slope but with a lot of disturbance
Chemo.gpdata = groupedData(tumour~month|patient,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
#No patients seems strange
#Line can be used as random slope:
Chemo.gpdata = groupedData(tumour~line|patient,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata,outer =~line)
#No patients seems strange
#Line can be used as random slope:
Chemo.gpdata = groupedData(tumour~line,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
#No patients seems strange
#Line can be used as random slope:
Chemo.gpdata = groupedData(tumour~1|line,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata,outer =~line)
#No patients seems strange
#Line can be used as random slope:
Chemo.gpdata = groupedData(tumour~line|patient,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata,outer =~line)
#Graph shows not heteroskedasticity
plot(lme_Chemo)
plot(lme_Chemo,outer=~line)
# – presence or absence of interactions between the different “explanatory variables”
boxplot(tumour~patient,main="Tumour responses per patient")#is 19 enough to diagnose patient heteroskedasticity?
boxplot(tumour~line,main="Tumour response per line")#which is consistent with less effect of lines through time, less variance
abline(h=mean(tumour),col="red")
boxplot(sensitivity~patient)#clear heteroskedasticity of sensitivity distribution through patients, is it correlated to survival or anything else?
boxplot(tumour~line,main="Tumour response per line")#which is consistent with less effect of lines through time, less variance
boxplot(tumour~month,data = chemo,main="Tumour responses per month of treatment")#that's more accurate!
# – presence or absence of interactions between the different “explanatory variables”
boxplot(tumour~patient,main="Tumour responses per patient")#is 19 enough to diagnose patient heteroskedasticity?
# – presence or absence of interactions between the different “explanatory variables”
boxplot(tumour~patient,main="Tumour responses per patient")#is 19 enough to diagnose patient heteroskedasticity?
abline(h=mean(tumour),col="red")
boxplot(tumour~month,data = chemo,main="Tumour responses per month of treatment")#that's more accurate!
abline(h=mean(tumour),col="red")
boxplot(tumour~month,data = Chemo,main="Tumour responses per month of treatment")#that's more accurate!
abline(h=mean(tumour),col="red")
boxplot(tumour~month,data = Chemo,main="Tumour responses per month of treatment")#that's more accurate!
abline(h=mean(tumour),col="red")
boxplot(tumour~month,data = chemo,main="Tumour responses per month of treatment")#that's more accurate!
abline(h=mean(tumour),col="red")
boxplot(tumour~line,main="Tumour response per line")#which is consistent with less effect of lines through time, less variance
abline(h=mean(tumour),col="red")
boxplot(sensitivity~patient)#clear heteroskedasticity of sensitivity distribution through patients, is it correlated to survival or anything else?
abline(h=mean(sensitivity),col="red")
pairs(lme_Chemo,~ranef(.)|patient)
pairs(lme_Chemo,~ranef(.)|sensitivity)
pairs(lme_Chemo,~ranef(.)|sensitivity,id=0.05,grid=T)
qqnorm(ranef(lme_Chemo))
qqnorm(ranef(lme_Chemo)[,1])
# – correlated or uncorrelated random effects ?
#   • get an impression of the variables potentially explanatory
#we have only one random effect, hence no possible correlations
pairs(lme_Chemo,~ranef(.)|patient,id=0.05,grid=T)
#normality of residuals
qqnorm(ranef(lme_Chemo)[,1])
#normality of residuals
qqnorm(ranef(lme_Chemo)[,1],pch=16)
qqline(ranef(lme_Chemo)[,1],col=2,lwd=2,lty=2)
#normality of residuals
qqnorm(ranef(lme_Chemo)[,2],pch=16)
qqline(ranef(lme_Chemo)[,2],col=2,lwd=2,lty=2)
#normality of residuals
qqnorm(ranef(lme_Chemo)[,1],pch=16)
qqline(ranef(lme_Chemo)[,1],col=2,lwd=2,lty=2)
ranef(lme_Chemo)
resid(lme_Chemo)
qqnorm(resid(lme_Chemo)[,1],pch=16)
qqnorm(resid(lme_Chemo)[1,],pch=16)
qqnorm(resid(lme_Chemo)[2,],pch=16)
resid(lme_Chemo)[2,]
resid(lme_Chemo)
t(resid(lme_Chemo))
t(resid(lme_Chemo))[1,]
t(resid(lme_Chemo))[[1,]]
t(resid(lme_Chemo))[[1]]
t(resid(lme_Chemo))[[,1]]
t(resid(lme_Chemo))[,1]
t(resid(lme_Chemo))[1,]
t(resid(lme_Chemo))[1,][1,]
t(resid(lme_Chemo))[1,][,1]
t(resid(lme_Chemo))[[1]][1,]
t(resid(lme_Chemo))[[1]]
t(resid(lme_Chemo))[[2]]
t(resid(lme_Chemo))
t(resid(lme_Chemo))[,"A"]
t(resid(lme_Chemo))["A",]
t(resid(lme_Chemo))
t(resid(lme_Chemo))[1,]
t(resid(lme_Chemo))[1,][[1]]
t(resid(lme_Chemo))[1,][,1]
resid(lme_Chemo)[1,][,1]
resid(lme_Chemo)[1,]
resid(lme_Chemo)[[1]]
lme_Chemo$residuals
qqnorm(lme_Chemo$residuals)
qqnorm(resid(lme_Chemo)[2,],pch=16)
# normality of random effects and residuals
qqnorm(ranef(lme_Chemo)[,1],pch=16)
qqline(ranef(lme_Chemo)[,1],col=2,lwd=2,lty=2)
qqnorm(lme_Chemo$residuals,pch=16)
qqline(lme_Chemo$residuals,col=2,lwd=2,lty=2)
# normality of random effects and residuals
qqnorm(ranef(lme_Chemo)[,1],pch=16)
qqline(ranef(lme_Chemo)[,1],col=2,lwd=2,lty=2)
#we need fatter tails for the residuals
qqnorm(lme_Chemo$residuals,pch=16)
qqline(lme_Chemo$residuals,col=2,lwd=2,lty=2)
plot(lme_Chemo,resid(.,type="p")~fitted(.),abline=0,id=0.05)
#1) Graph shows not heteroskedasticity
plot(lme_Chemo)
plot(lme_Chemo,resid(.,type="p")~fitted(.),abline=0,id=0.05)
plot(lme_Chemo,resid(.,type="p")~fitted(.)|patient,abline=0,id=0.05)
#Patients do not have the same sensitivity evolution at all!
#All lot of our estimates are overestimated
Chemo.gpdata = groupedData(tumour~sensitivity|patient,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
#1) Graph shows not heteroskedasticity
plot(lme_Chemo)
plot(lme_Chemo,resid(.,type="p")~fitted(.),abline=0,id=0.05)
plot(lme_Chemo,resid(.,type="p")~fitted(.)|patient,abline=0,id=0.05)
plot(lme_Chemo,resid(.,type="p")~fitted(.)|month,abline=0,id=0.05)
plot(lme_Chemo,resid(.,type="p")~fitted(.)|line,abline=0,id=0.05)
plot(lme_Chemo,resid(.,type="p")~fitted(.)|line,abline=0,id=0.05)
#1) Graph shows not heteroskedasticity
plot(lme_Chemo,resid(.,type="p")~fitted(.),abline=0,id=0.05)
#1) Overall data no clear heteroskedasticity, but clear heteroskedasticity per line
plot(lme_Chemo,resid(.,type="p")~fitted(.),abline=0,id=0.05)
plot(lme_Chemo,resid(.,type="p")~fitted(.)|line,abline=0,id=0.05)
#2) Breusch-Pagan test: we cannot reject H_0: Homoskedasticity
bptest(lme_Chemo)
#1) Overall data no clear heteroskedasticity, but different variance per line
plot(lme_Chemo,resid(.,type="p")~fitted(.),abline=0,id=0.05)
plot(lme_Chemo,resid(.,type="p")~fitted(.)|line,abline=0,id=0.05)
#No patients seems strange
#Line can be used as random slope:
Chemo.gpdata = groupedData(tumour~line|patient,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata,outer =~line)
boxplot(tumour~line,main="Tumour response per line")#which is consistent with less effect of lines through time, less variance
abline(h=mean(tumour),col="red")
plot(lme_Chemo,resid(.,type="p")~fitted(.)|line,abline=0,id=0.05)
lmer_Chemo1 = lmer(tumour~line*sensitivity+month*line+(month|patient),data=Chemo)
lme_Chemo1 = lme(fixed=tumour~line*sensitivity+month*line, random=~1|patient,data=Chemo, method="ML")
lme_Chemo = lmer(tumour~sensitivity*line+month*line+(line|patient),data=Chemo,REML=F)
# normality of random effects and residuals
#almost normal here
qqnorm(ranef(lme_Chemo)[,1],pch=16)
lme_Chemo1 = lme(fixed=tumour~line*sensitivity+month*line, random=~1|patient,data=Chemo, method="ML")
# normality of random effects and residuals
#almost normal here
qqnorm(ranef(lme_Chemo)[,1],pch=16)
lme_Chemo = lmer(tumour~sensitivity*line+month*line+(line|patient),data=Chemo,REML=F)
# normality of random effects and residuals
#almost normal here
qqnorm(ranef(lme_Chemo)[,1],pch=16)
# normality of random effects and residuals
#almost normal here
qqnorm(ranef(lme_Chemo)[,2],pch=16)
ranef(lme_Chemo)
lme_Chemo = lme(tumour~sensitivity*line+month*line+(line|patient),data=Chemo)
lme_Chemo = lme(tumour~sensitivity*line+month*line, random=~line|patient,data=Chemo)
lme_Chemo = lme(tumour~sensitivity*line+month*line, random=~line|patient,data=Chemo)
summary(lmer_Chemo)
lme_Chemo = lmer(tumour~sensitivity*line+month*line+(line|patient),data=Chemo,REML=F)
source('E:/Universite de Genève/Faculté d\'économie/Mon Master en statistique/A1S1/Mixed Linear Models/MLM_Project/Plan of work.R', encoding = 'UTF-8', echo=TRUE)
lme_Chemo = lmer(tumour~sensitivity*line+month*line+(line|patient),data=Chemo,REML=F)
lme_Chemo1 = lme(fixed=tumour~line*sensitivity+month*line, random=~1|patient,data=Chemo, method="ML")
# normality of random effects and residuals
#almost normal here
qqnorm(ranef(lme_Chemo)[,1],pch=16)
# normality of random effects and residuals
#almost normal here
qqnorm(ranef(lme_Chemo),pch=16)
ranef(lme_Chemo)
ranef(lme_Chemo)[,1]
lme_Chemo = lmer(tumour~sensitivity*line+month*line+(line|patient),data=Chemo,REML=F)
# normality of random effects and residuals
#almost normal here
qqnorm(ranef(lmer_Chemo)[,1],pch=16)
ranef(lmer_Chemo)[,1]
ranef(lmer_Chemo)
Chemo = read.table(file="Chemotherapy-version1.csv",header=TRUE,sep=",")
attach(Chemo)
Chemo[,"line"] <- as.factor(Chemo[,"line"]);
Chemo[,"month"]  <- as.factor(Chemo[,"month"]);
Chemo[,"month"]  <- as.integer(Chemo[,"month"]);
sapply(Chemo,class)
Chemo[,"line"] <- as.factor(Chemo[,"line"])
#re-indexing months
chemo=Chemo
for (i in 1:19){
chemo[patient==LETTERS[i],"month"]=seq(1,length(chemo[patient==LETTERS[i],"month"]))
}
lmer_Chemo = lmer(tumour~sensitivity*line+month*line+(line|patient),data=Chemo)
lmer_Chemo = lmer(tumour~sensitivity*line+month*line+(1|patient),data=Chemo)
lmer_Chemo = lmer(tumour~sensitivity*line+month*line+(1|patient),data=Chemo)
summary(lmer_Chemo)
lmer_Chemo = lmer(tumour~sensitivity*line+month*line+(1|patient),data=Chemo)
summary(lmer_Chemo)
lme_Chemo = lmer(tumour~sensitivity*line+month*line+(1|patient),data=Chemo,REML=F)
summary(lme_Chemo)
# normality of random effects and residuals
#almost normal here
qqnorm(ranef(lme_Chemo)[,1],pch=16)
#we need fatter tails for the residuals
qqnorm(lme_Chemo$residuals,pch=16)
lme_Chemo = lme(fixed=tumour~line*sensitivity+month*line, random=~1|patient,data=Chemo, method="ML")
# normality of random effects and residuals
#almost normal here
qqnorm(ranef(lme_Chemo)[,1],pch=16)
qqline(ranef(lme_Chemo)[,1],col=2,lwd=2,lty=2)
#we need fatter tails for the residuals
qqnorm(lme_Chemo$residuals,pch=16)
qqline(lme_Chemo$residuals,col=2,lwd=2,lty=2)
lme_Chemo = lme(fixed=tumour~sensitivity*line+month*line, random=~1|patient,data=Chemo, method="ML")
lme_Chemo = lme(fixed=tumour~sensitivity*line+month*line, random=~line|patient,data=Chemo, method="ML")
lme_Chemo = lme(fixed=tumour~sensitivity*line+month*line, random=~1|patient,data=Chemo, method="ML")
summary(lme_Chemo)
# normality of random effects and residuals
#almost normal here
qqnorm(ranef(lme_Chemo)[,1],pch=16)
qqline(ranef(lme_Chemo)[,1],col=2,lwd=2,lty=2)
#we need fatter tails for the residuals
qqnorm(lme_Chemo$residuals,pch=16)
qqline(lme_Chemo$residuals,col=2,lwd=2,lty=2)
# normality of random effects and residuals
#almost normal here
qqnorm(ranef(lme_Chemo)[,1],pch=16);qqline(ranef(lme_Chemo)[,1],col=2,lwd=2,lty=2)
#we need fatter tails for the residuals
qqnorm(lme_Chemo$residuals,pch=16) qqline(lme_Chemo$residuals,col=2,lwd=2,lty=2)
#sensitivity and tumour should be used as response variable
#clear interaction between month and line to determine sensitivity or tumour
interaction.plot(line,month,tumour)
interaction.plot(month,line,tumour)
#interaction between line and sensitivity? the interaction plot are useless here
# interaction.plot(line,sensitivity,tumour)
# interaction.plot(sensitivity,line,tumour)
# by comparing the two models, we see that the better one is the one with interactions
lme_Chemo_no_interact = lme(fixed=tumour~sensitivity+month*line, random=~1|patient,data=Chemo, method="ML")
anova(lme_Chemo_no_interact,lme_Chemo)#at 5%, I reject the hypothesis that both models are identicals
#interaction between line and sensitivity? the interaction plot are useless here
# interaction.plot(line,sensitivity,tumour)
# interaction.plot(sensitivity,line,tumour)
# by comparing the two models, we see that the better one is the one with interactions
lme_Chemo_no_interact = lme(fixed=tumour~line+sensitivity+month*line, random=~1|patient,data=Chemo, method="ML")
anova(lme_Chemo_no_interact,lme_Chemo)#at 5%, I reject the hypothesis that both models are identicals
lme_Chemo_no_interact = lme(fixed=tumour~line*sensitivity+month+line, random=~1|patient,data=Chemo, method="ML")
anova(lme_Chemo_no_interact,lme_Chemo)#at 5%, I reject the hypothesis that both models are identicals
#but we should keep the interaction between month and line
lme_Chemo_no_interact = lme(fixed=tumour~line*sensitivity+month+line, random=~1|patient,data=Chemo, method="ML")
anova(lme_Chemo_no_interact,lme_Chemo)#at 5%, I reject the hypothesis that both models are identicals
lme_Chemo_no_interact2 = lme(fixed=tumour~line+sensitivity+month, random=~1|patient,data=Chemo, method="ML")
lme_Chemo_no_interact3 = lme(fixed=tumour~line+sensitivity+month*line, random=~1|patient,data=Chemo, method="ML")
anova(lme_Chemo_no_interact,lme_Chemo_no_interact3)#at 5%, I reject the hypothesis that both models are identicals
anova(lme_Chemo_no_interact2,lme_Chemo_no_interact3)#at 5%, I reject the hypothesis that both models are identicals
lme_Chemo_no_interact2 = lme(fixed=tumour~line+sensitivity+month, random=~1|patient,data=Chemo, method="ML")
lme_Chemo_no_interact3 = lme(fixed=tumour~line+sensitivity+month*line, random=~1|patient,data=Chemo, method="ML")
anova(lme_Chemo_no_interact2,lme_Chemo_no_interact3)
anova(lme_Chemo_no_interact3,lme_Chemo_no_interact2)
anova(lme_Chemo_no_interact2,lme_Chemo_no_interact3)
#interaction between line and sensitivity? the interaction plot are useless here
# interaction.plot(line,sensitivity,tumour)
# interaction.plot(sensitivity,line,tumour)
# interaction between line and sensitivity retrieved
lme_Chemo_no_interact = lme(fixed=tumour~sensitivity+month*line, random=~1|patient,data=Chemo, method="ML")
anova(lme_Chemo_no_interact,lme_Chemo)
#interaction between line and sensitivity? the interaction plot are useless here
# interaction.plot(line,sensitivity,tumour)
# interaction.plot(sensitivity,line,tumour)
# interaction between line and sensitivity retrieved
lme_Chemo_no_interact = lme(fixed=tumour~line+sensitivity+month*line, random=~1|patient,data=Chemo, method="ML")
anova(lme_Chemo_no_interact,lme_Chemo)
anova(lme_Chemo_interact_sensitivity,lme_Chemo)
#but what interactions should we keep?
lme_Chemo_no_interact = lme(fixed=tumour~sensitivity+month+line, random=~1|patient,data=Chemo, method="ML")
lme_Chemo_interact_month = lme(fixed=tumour~sensitivity+line*month, random=~1|patient,data=Chemo, method="ML")
lme_Chemo_interact_sensitivity = lme(fixed=tumour~line*sensitivity+month, random=~1|patient,data=Chemo, method="ML")
anova(lme_Chemo_interact_sensitivity,lme_Chemo)
anova(lme_Chemo_interact_month,lme_Chemo)
anova(lme_Chemo_no_interact,lme_Chemo)
anova(lme_Chemo_no_interact,lme_Chemo_interact_month)
anova(lme_Chemo_no_interact,lme_Chemo_interact_sensitivity)
#I look from both sides: retrieving from the full model / adding from the most restricted possible model
anova(lme_Chemo_interact_sensitivity,lme_Chemo)
anova(lme_Chemo_interact_month,lme_Chemo)
anova(lme_Chemo_no_interact,lme_Chemo_interact_month)
anova(lme_Chemo_interact_month,lme_Chemo)
anova(lme_Chemo_interact_month,lme_Chemo)
#I look from both sides: retrieving from the full model / adding from the most restricted possible model
anova(lme_Chemo_interact_sensitivity,lme_Chemo)
anova(lme_Chemo_no_interact,lme_Chemo_interact_sensitivity)
#I look from both sides: retrieving from the full model / adding from the most restricted possible model
anova(lme_Chemo_interact_sensitivity,lme_Chemo)
anova(lme_Chemo_interact_month,lme_Chemo)
anova(lme_Chemo_no_interact,lme_Chemo_interact_month)
anova(lme_Chemo_interact_month,lme_Chemo)
anova(lme_Chemo_interact_month,lme_Chemo)
anova(lme_Chemo_no_interact,lme_Chemo_interact_month)
anova(lme_Chemo_no_interact,lme_Chemo_interact_sensitivity)
#I look from both sides: retrieving from the full model / adding from the most restricted possible model
anova(lme_Chemo_interact_sensitivity,lme_Chemo)
anova(lme_Chemo_interact_month,lme_Chemo)
anova(lme_Chemo_no_interact,lme_Chemo_interact_month)
#I look from both sides: retrieving from the full model / adding from the most restricted possible model
anova(lme_Chemo_interact_sensitivity,lme_Chemo)
anova(lme_Chemo_interact_month,lme_Chemo)
anova(lme_Chemo_no_interact,lme_Chemo_interact_month)
anova(lme_Chemo_no_interact,lme_Chemo_interact_sensitivity)
anova(lme_Chemo_interact_sensitivity,lme_Chemo)
anova(lme_Chemo_interact_sensitivity,lme_Chemo)
anova(lme_Chemo_interact_month,lme_Chemo)
anova(lme_Chemo_no_interact,lme_Chemo_interact_month)
#but here yes!
anova(lme_Chemo_interact_month,lme_Chemo)
# and better than the no-interaction model
anova(lme_Chemo_no_interact,lme_Chemo_interact_month)
anova(lme_Chemo_interact_sensitivity,lme_Chemo)#we do not get a better model with the interaction between sensitivity and line
#but here yes!
anova(lme_Chemo_interact_month,lme_Chemo)
anova(lme_Chemo_interact_sensitivity,lme_Chemo)#but here yes!
anova(lme_Chemo_interact_sensitivity,lme_Chemo)#but a better one by having month*line interaction
# and better than the no-interaction model
anova(lme_Chemo_no_interact,lme_Chemo_interact_month)
