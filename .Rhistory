labs(x = "chi-squared statistic test",
y = "",
title = "p-value < 0.05: H0 is rejected") +
theme(title = element_text(size = 7))
p_sc2 <- p_red
p_blue
p_blue <- data %>%
ggplot(aes(x = xx, y = yy)) +
geom_ribbon(data = data_blue_area, aes(ymin = 0, ymax = yy), fill = "blue", alpha = 0.5) +
geom_line() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = T_obs, linetype = "dashed", colour = "blue", alpha = 0.4) +
geom_vline(xintercept = k_alpha, linetype = "dashed", colour = "red", alpha = 0.6) +
theme_minimal() +
labs(x = "chi-squared statistic test",
y = "",
title = "p-value < 0.05: H0 is rejected") +
theme(title = element_text(size = 7))
p_blue
p_blue <- data %>%
ggplot(aes(x = xx, y = yy)) +
geom_ribbon(data = data_blue_area, aes(ymin = 0, ymax = yy), fill = "blue", alpha = 0.5) +
geom_line() +
#geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = T_obs, linetype = "dashed", colour = "blue", alpha = 0.4) +
geom_vline(xintercept = k_alpha, linetype = "dashed", colour = "red", alpha = 0.6) +
theme_minimal() +
labs(x = "chi-squared statistic test",
y = "",
title = "p-value < 0.05: H0 is rejected") +
theme(title = element_text(size = 7))
p_sc2 <- p_red
p_blue
p_blue <- data %>%
ggplot(aes(x = xx, y = yy)) +
geom_ribbon(data = data_blue_area, aes(ymin = 0, ymax = yy), fill = "blue", alpha = 0.5) +
geom_line() +
#geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = T_obs, linetype = "dashed", colour = "blue", alpha = 0.4) +
geom_vline(xintercept = k_alpha, linetype = "dashed", colour = "red", alpha = 0.6) +
theme_minimal() +
labs(x = "chi-squared statistic test",
y = "",
title = "p-value < 0.10: H0 is rejected") +
theme(title = element_text(size = 7))
p_sc2 <- p_red
p_blue
xx <- seq(35, 65, length = 500)
yy <- dnorm(xx,mean=50,sd=2.5)
data <- tibble(xx, yy)
data_red_area <- data %>%
filter(xx >= k_alpha)
p_red <- data %>%
ggplot(aes(x = xx, y = yy)) +
geom_ribbon(data = data_red_area, aes(ymin = 0, ymax = yy), fill = "red", alpha = 0.5) +
geom_line() +
geom_vline(xintercept = T_obs, linetype = "dashed", colour = "blue", alpha = 0.4) +
geom_vline(xintercept = k_alpha, linetype = "dashed", colour = "red", alpha = 0.6) +
annotate("text",label="55.72",x=55.72,y=0.1,colour="blue")+
annotate("text",label="7.81",x=7.81,y=0.1,colour="red")+
theme_minimal() +
labs(x = "chi-squared statistic test",
y = "",
title = "Distribution of the test statistic and position of the observed value") +
theme(title = element_text(size = 7))
data_blue_area <- data %>%
filter(xx <= T_obs)
p_blue <- data %>%
ggplot(aes(x = xx, y = yy)) +
geom_ribbon(data = data_blue_area, aes(ymin = 0, ymax = yy), fill = "blue", alpha = 0.5) +
geom_line() +
#geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = T_obs, linetype = "dashed", colour = "blue", alpha = 0.4) +
geom_vline(xintercept = k_alpha, linetype = "dashed", colour = "red", alpha = 0.6) +
theme_minimal() +
labs(x = "chi-squared statistic test",
y = "",
title = "p-value < 0.10: H0 is rejected") +
theme(title = element_text(size = 7))
p_sc2 <- p_red
p_blue
data_blue_area <- data %>%
filter(xx <= 46.8)
p_blue <- data %>%
ggplot(aes(x = xx, y = yy)) +
geom_ribbon(data = data_blue_area, aes(ymin = 0, ymax = yy), fill = "blue", alpha = 0.5) +
geom_line() +
#geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = T_obs, linetype = "dashed", colour = "blue", alpha = 0.4) +
geom_vline(xintercept = k_alpha, linetype = "dashed", colour = "red", alpha = 0.6) +
theme_minimal() +
labs(x = "chi-squared statistic test",
y = "",
title = "p-value < 0.10: H0 is rejected") +
theme(title = element_text(size = 7))
p_blue
p_blue <- data %>%
ggplot(aes(x = xx, y = yy)) +
geom_ribbon(data = data_blue_area, aes(ymin = 0, ymax = yy), fill = "blue", alpha = 0.5) +
geom_line() +
#geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = T_obs, linetype = "dashed", colour = "red", alpha = 0.4) +
geom_vline(xintercept = k_alpha, linetype = "dashed", colour = "blue", alpha = 0.6) +
theme_minimal() +
labs(x = "chi-squared statistic test",
y = "",
title = "p-value < 0.10: H0 is rejected") +
theme(title = element_text(size = 7))
p_sc2 <- p_red
p_blue
pnorm(46,mean=50,sd=2.5)
x <- c(49.7, 48.1, 51.7, 53.8, 51, 53.2, 52.8, 49.5, 49.2)
mean(x)
confint(x)
1-0.5/2
1-0.05/2
var(x)
qqnorm(qt(seq(0,1,10))
)
seq(0,1,10)
seq(0,1)
seq(0,1,0.01)
qt(0.5,1)
qt(0,1)
qt(0.9,1)
qqnorm(qt(seq(0,1,0.01)))
qqnorm(qt(seq(0,1,0.01),1))
qqnorm(qt(seq(0,1,0.01),df=1)
)
qqnorm(qt(seq(0,1,0.01),df=1))
qt(seq(0,1,0.01),df=1)
qqnorm(qt(seq(0.01,1,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1))
qqline
qqline(qt(seq(0.01,0.99,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1));qqline(qt(seq(0.01,0.99,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1),ylim=c(0,30));qqline(qt(seq(0.01,0.99,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1),xlim=c(-5,5));qqline(qt(seq(0.01,0.99,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1),xlim=c(-5,5),ylim=c(-50,50));qqline(qt(seq(0.01,0.99,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1),xlim=c(-5,5),ylim=c(-5,20));qqline(qt(seq(0.01,0.99,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1),xlim=c(-2,2),ylim=c(-5,20));qqline(qt(seq(0.01,0.99,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1),xlim=c(-5,5),ylim=c(-5,20));qqline(qt(seq(0.01,0.99,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1));qqline(qt(seq(0.01,0.99,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1));qqline(qt(seq(0.01,0.99,0.01),df=1),color="red")
qqnorm(qt(seq(0.01,0.99,0.01),df=1));qqline(qt(seq(0.01,0.99,0.01),df=1),col="red")
qqnorm(qt(seq(0.01,0.99,0.01),df=1));qqline(qt(seq(0.01,0.99,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1));qqline(qt(seq(0.01,0.99,0.01),df=1),col="red")
qqnorm(qt(seq(0.01,0.99,0.01),df=1));qqline(qt(seq(0.01,0.99,0.01),df=1),col="red",main="Student distribution vs Normal distribution")
title(main="Student distribution vs Normal distribution")
qqnorm(qt(seq(0.01,0.99,0.01),df=1));qqline(qt(seq(0.01,0.99,0.01),df=1),col="red",main="Student distribution vs Normal distribution")
qqnorm(qt(seq(0.01,0.99,0.01),df=100));qqline(qt(seq(0.01,0.99,0.01),df=100),col="red")
qnorm(0.975)
qnorm(0.5)
qnorm(1)
?qt
qt(0.975,8)
1.96*sqrt(75/1000*(1-75/1000)/1000)
0.075+1.96*sqrt(75/1000*(1-75/1000)/1000)
0.075-1.96*sqrt(75/1000*(1-75/1000)/1000)
?length
?size
nchar("Hello friend")
nchar("Hello")
nchar("Hello ")
length("Hello")
read.table("Aargau_2015.csv",header=TRUE,sep=",")
x=read.table("Aargau_2015.csv",header=TRUE,sep=",")
length(x[,"municipality"])
length(x)
length(x[,1])
length(x[[1]])
x[[1]]
length(x data$municipality)
aargau data=read.table("Aargau_2015.csv",header=TRUE,sep=",")
aargau data<-read.table("Aargau_2015.csv",header=TRUE,sep=",")
aargau$data=read.table("Aargau_2015.csv",header=TRUE,sep=",")
[aargau,data]=read.table("Aargau_2015.csv",header=TRUE,sep=",")
length(x$municipality)
mean(x[,1])
ave(x)
ave(t(x))
ave(1:3)
ave(x[,1])
sum(x[,1]-ave(x[,1]))^2
sum(x[,1]-ave(x[,1]))
x[,1]-ave(x[,1])
sum((x[,1]-ave(x[,1]))^2)
sqrt(sum((x[,1]-ave(x[,1]))^2))
var(x[,1])
sqrt(sum((x[,1]-ave(x[,1]))^2)/213)
sqrt(var(x[,1]))
mean(x[,1])
mean(x[,1],trim=0.01)
mean(x[,1],trim=0.001)
mean(x[,1],trim=0.01)
mean(x[,1],trim=0.05)
mean(x[,1],trim=0.5)
mean(x[,1],trim=0.001)
mean(x[,1],trim=0.005)
aargau_data=x
set.seed(42)
aargau_sample <- sample(x = aargau_data$population, size = 10, replace = TRUE)
aargau_sample <- sort(aargau_sample)
View(aargau_sample)
aargau_sample==aargau_sample
unique(aargau_sample)
match(1925,aargau_sample)
duplicated(aargau_sample)
aargau_sample(duplicated(aargau_sample))
aargau_sample[duplicated(aargau_sample)]
mean(aargau_sample)
# Initialization  ------------------------------------------------------------
#Ctrl+Shift+R to create a new section
#Ctrl+Alt+T to run only the current section
#Ctrl+Shift+Enter to run all file
#Ctrl-Shift-C to comment/uncomment quickly
library(scales)#This library allows to control the nuance of colors with the function alpha()
library(nlme) #Groupdata
library(lmerTest)
library(MuMIn)
library(pbkrtest)
library(car)
library(mvtnorm)
library(dplyr)
library(circlize)
Chemo = read.table(file="Chemotherapy-version1.csv",header=TRUE,sep=",")
attach(Chemo)
Chemo[,"line"] <- as.factor(Chemo[,"line"]);
Chemo[,"month"]  <- as.factor(Chemo[,"month"]);
Chemo[,"month"]  <- as.integer(Chemo[,"month"]);
sapply(Chemo,class)
Chemo[,"line"] <- as.factor(Chemo[,"line"])
#merge levels 3,4 and 5 of line in one level (+3) as asked in the 2nd question
levels(Chemo[,"line"])<-c("1","2","+3","4","5")
levels(Chemo[,"line"])[levels(Chemo[,"line"])=="4"] <-"+3"
levels(Chemo[,"line"])[levels(Chemo[,"line"])=="5"] <-"+3"
#re-indexing months
chemo=Chemo
for (i in 1:19){
chemo[patient==LETTERS[i],"month"]=seq(1,length(chemo[patient==LETTERS[i],"month"]))
}
# 4.1 First look of the data ----------------------------------------------
# • Define:
#– what are the independent experiment units (subjects, households, lots, ...)
#We have only within-subject factors
#Patients are the independent experiment units
#– the role of the different variables in your analysis:
#   ∗ which variable is the response ?
#tumour
#   ∗ which variables are covariates ?
# all the others
#   ∗ which variables are factors ?
#patient, line
#   ∗ Are the covariates and factors fixed or random effects ? (justify)
#R.E. : patients (we do not exhaust the population, they do not brings explaination,levels chosen randomly)
#F.E. : line (regressor), month (nested in line), sensitivity
# ∗ Are the factors crossed, nested, ... ?
# months is nested in line
# • Check if the class of your variables correspond to your needs:
#   – class numeric for the response:
#tumour
# – class numeric or integer covariates like age, ... :
# month,sensitivity
# – class factor or ordered for factors like subject, gender, ...:
# patient, line
# • Write a first version of your model that include potential interactions
#patient: i, line: l, month: m, sensitivity: s
#Y_{ilms} = \mu + \alpha_l \+ \beta_s + (\alpha_l \cdot \beta_s) + \delta_m + \gamma_s + zeta_i +epsilon_ilms
lmer_Chemo = lmer(tumour~line*sensitivity+month*line+(month|patient),data=Chemo)
summary(lmer_Chemo)
lme_Chemo = lme(fixed=tumour~line*sensitivity+month*line, random=~1|patient,data=Chemo, method="ML")
summary(lme_Chemo)
# 4.2 Exploratory data analysis ----------------------------------------------
# • check if the model’s assumptions hold:
#   – linearity of the relation between the covariates and the response
source('sections/4.2.linearity.r')
#sensitivity and tumour should be used as response variable
#clear interaction between month and line to determine sensitivity or tumour
interaction.plot(line,month,tumour)
interaction.plot(month,line,tumour)
interaction.plot(line,month,sensitivity)
interaction.plot(month,line,sensitivity)
#interaction between line and sensitivity?
interaction.plot(line,sensitivity,tumour)
interaction.plot(sensitivity,line,tumour)
interaction.plot(line,patient,tumour)#line has an increasing effect on the patient effect on tumour
# – equal variance of the responses around the different factor’s levels
plot.design(Chemo)
Anova(lme_Chemo,type="II")#effect of each element to the whole
# all become more significant, line:sensitivity is statistically significant
Anova(lme_Chemo,type="III")#effect of each element to the whole (with interactions)
#they are all significant apart from interaction between line and month.
#CONCLUSION: get interaction of line and month out of the model
# Chemo.gpdata = groupedData(tumour~line|patient,data=Chemo,order.groups=F,
# label=list(x="Patients",y="Tumour response"),
# units=list(y="(percent by weight)"))
# plot(Chemo.gpdata,outer=~sensitivity*line)
# – presence or absence of interactions between the different “explanatory variables”
boxplot(tumour~patient,main="Tumour responses per patient")#is 19 enough to diagnose patient heteroskedasticity?
abline(h=mean(tumour),col="red")
boxplot(tumour~month,data = chemo,main="Tumour responses per month of treatment")#that's more accurate!
abline(h=mean(tumour),col="red")
boxplot(tumour~line,main="Tumour response per line")#which is consistent with less effect of lines through time, less variance
abline(h=mean(tumour),col="red")
boxplot(sensitivity~patient)#clear heteroskedasticity of sensitivity distribution through patients
# – correlated or uncorrelated random effects ?
#   • get an impression of the variables potentially explanatory
# – equal variance of the responses around the different factor’s levels
plot.design(Chemo)
#they are all significant apart from interaction between line and month.
#CONCLUSION: get interaction of line and month out of the model
plot(lme_Chemo)
#they are all significant apart from interaction between line and month.
#CONCLUSION: get interaction of line and month out of the model
par(mfrow=c(2,2))
plot(lme_Chemo)
#they are all significant apart from interaction between line and month.
#CONCLUSION: get interaction of line and month out of the model
par(mfrow=c(2,2))
plot(lme_Chemo)
plot(lme_Chemo)
bptest(lme_Chemo)
library(lmtest)
bptest(lme_Chemo)
ncvTest(lme_Chemo)
bptest(lmer_Chemo)
ncvTest(lmer_Chemo)
bptest(lme_Chemo)
plot(lme_Chemo)
bptest(lme_Chemo)
## generate a regressor
x <- rep(c(-1,1), 50)
## generate heteroskedastic and homoskedastic disturbances
err1 <- rnorm(100, sd=rep(c(1,2), 50))
err2 <- rnorm(100)
## generate a linear relationship
y1 <- 1 + x + err1
y2 <- 1 + x + err2
## perform Breusch-Pagan test
bptest(y1 ~ x)
bptest(y2 ~ x)
bptest(lme_Chemo)
#Breusch-Pagan test: we cannot reject H_0: Homoskedasticity
bptest(lme_Chemo)
plot(lme_Chemo)
plot(bptest(lme_Chemo))
# – equal variance of the responses around the different factor’s levels
plot.design(Chemo)
# to equal variance is to use the ANOVA tests
anova(lme_Chemo,type="sequential")#effect of sequentially adding each new element
#Graph shows not heteroskedasticity
plot(lme_Chemo)
# to equal variance is to use the ANOVA tests
anova(lme_Chemo,type="sequential")#effect of sequentially adding each new element
# sensitivity, its interaction and the interaction of line and month not significant
Anova(lme_Chemo,type="II")#effect of each element to the whole
# all become more significant, line:sensitivity is statistically significant
Anova(lme_Chemo,type="III")#effect of each element to the whole (with interactions)
Chemo.gpdata = groupedData(tumour~line,data=Chemo,order.groups=F,
label=list(x="Patients",y="Tumour response"),
units=list(y="(percent by weight)"))
Chemo.gpdata = groupedData(tumour~line|month,data=Chemo,order.groups=F,
label=list(x="Patients",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata,outer=~sensitivity*line)
plot(Chemo.gpdata)
Chemo.gpdata = groupedData(tumour~sensitivity|month,data=Chemo,order.groups=F,
label=list(x="Patients",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
Chemo.gpdata = groupedData(tumour~sensitivity|line,data=Chemo,order.groups=F,
label=list(x="Patients",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
Chemo.gpdata = groupedData(tumour~sensitivity|line,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
Chemo.gpdata = groupedData(month~sensitivity|line,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
Chemo.gpdata = groupedData(line~sensitivity|month,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
Chemo.gpdata = groupedData(patient~sensitivity|line,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
Chemo.gpdata = groupedData(tumour~sensitivity|month,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
Chemo.gpdata = groupedData(tumour~sensitivity|month,data=Chemo,order.groups=T,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
Chemo.gpdata = groupedData(tumour~sensitivity|line,data=Chemo,order.groups=T,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
Chemo.gpdata = groupedData(tumour~sensitivity|month,data=Chemo,order.groups=T,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
Chemo.gpdata = groupedData(tumour~sensitivity|month,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
Chemo.gpdata = groupedData(tumour~sensitivity|patient,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
Chemo.gpdata = groupedData(sensitivity~tumour|patient,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
Chemo.gpdata = groupedData(sensitivity~tumour|patient,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
Chemo.gpdata = groupedData(sensitivity~month|patient,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
Chemo.gpdata = groupedData(tumour~month|patient,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
Chemo.gpdata = groupedData(tumour~line|patient,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
Chemo.gpdata = groupedData(tumour~month|patient,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
#We see the same residual patterns for all month
Chemo.gpdata = groupedData(tumour~sensitivity|month,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
#Patients do not have the same sensitivity evolution at all!
#All lot of our estimates are overestimated
Chemo.gpdata = groupedData(tumour~sensitivity|patient,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
#Month looks like a candidate for a random slope but with a lot of disturbance
Chemo.gpdata = groupedData(tumour~line|patient,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
#We see the same residual patterns for all month
Chemo.gpdata = groupedData(tumour~sensitivity|month,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
summary(lme_Chemo)
source('E:/Universite de Genève/Faculté d\'économie/Mon Master en statistique/A1S1/Mixed Linear Models/MLM_Project/Plan of work.R', encoding = 'UTF-8', echo=TRUE)
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
plot(Chemo.gpdata,outer=~patient)
#Patients do not have the same sensitivity evolution at all!
#All lot of our estimates are overestimated
Chemo.gpdata = groupedData(tumour~sensitivity|patient,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
#We see the same residual patterns for all month
Chemo.gpdata = groupedData(tumour~line*sensitivity+month*line|patient,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
#We see the same residual patterns for all month
Chemo.gpdata = groupedData(tumour~line+sensitivity+month+line|patient,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
#We see the same residual patterns for all month
Chemo.gpdata = groupedData(tumour~line,sensitivity,month,line|patient,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
#We see the same residual patterns for all month
Chemo.gpdata = groupedData(tumour~sensitivity|month,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
plot(Chemo.gpdata,outer=month)
plot(Chemo.gpdata)
#Patients do not have the same sensitivity evolution at all!
#All lot of our estimates are overestimated
Chemo.gpdata = groupedData(tumour~sensitivity|patient,data=Chemo,order.groups=F,
label=list(x="Sensitivity",y="Tumour response"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
plot(Chemo.gpdata,outer=patient)
plot(Chemo.gpdata)
#Tumour cannot serve as random slope for sensitivity
Chemo.gpdata = groupedData(sensitivity~tumour|patient,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
#No patients seems strange
Chemo.gpdata = groupedData(tumour~line|patient,data=Chemo,order.groups=F,
label=list(x="Tumour",y="Sensitivity"),
units=list(y="(percent by weight)"))
plot(Chemo.gpdata)
plot(Chemo.gpdata,outer=patient)
plot(Chemo.gpdata,outer=month)
plot(Chemo.gpdata,outer=month)
plot(Chemo.gpdata,outer=line)
plot(Chemo.gpdata,outer=sensitivity)
