# – presence or absence of interactions between the different “explanatory variables”
boxplot(tumour~patient)#is 19 enough to diagnose patient heteroskedasticity?
abline(h=mean(tumour))
abline(h=mean(tumour),col="red")
#this next boxplot is kinda biased since some "month 3" appears befort some "month 1"
boxplot(tumour~month)#left-skewed distribution per month, the third month shows the smallest decline in tumour regression
abline(h=mean(tumour),col="red")
boxplot(tumour~month,data = chemo,main="Tumour evolution per month of treatment")#that's more accurate!
#this next boxplot is kinda biased since some "month 3" appears befort some "month 1"
boxplot(tumour~month)#left-skewed distribution per month, the third month shows the smallest decline in tumour regression
boxplot(tumour~month,data = chemo,main="Tumour evolution per month of treatment")#that's more accurate!
#this next boxplot is kinda biased since some "month 3" appears befort some "month 1"
boxplot(tumour~month,data = chemo,main="Tumour evolution per month of treatment")#that's more accurate!
for (i in 1:19){
chemo[patient==LETTERS[i],"month"]=seq(1,length(chemo[patient==LETTERS[i],"month"]))
}
#this next boxplot is kinda biased since some "month 3" appears befort some "month 1"
boxplot(tumour~month,data = chemo,main="Tumour evolution per month of treatment")#that's more accurate!
abline(h=mean(tumour),col="red")
par(mfrow=c(2,1))
boxplot(tumour~month,data = chemo,main="Tumour evolution per month of treatment")#that's more accurate!
par(mfrow=c(1,1))
boxplot(tumour~month,data = chemo,main="Tumour evolution per month of treatment")#that's more accurate!
# – presence or absence of interactions between the different “explanatory variables”
boxplot(tumour~patient)#is 19 enough to diagnose patient heteroskedasticity?
# – presence or absence of interactions between the different “explanatory variables”
boxplot(tumour~patient,main="Tumour responses per patient")#is 19 enough to diagnose patient heteroskedasticity?
abline(h=mean(tumour),col="red")
boxplot(tumour~month,data = chemo,main="Tumour evolution per month of treatment")#that's more accurate!
abline(h=mean(tumour),col="red")
boxplot(tumour~line)#which is consistent with less effect of lines through time, less variance
abline(h=mean(tumour),col="red")
boxplot(tumour~line,main="Tumour response per line")#which is consistent with less effect of lines through time, less variance
abline(h=mean(tumour),col="red")
boxplot(sensitivity~patient)#clear heteroskedasticity of sensitivity distribution through patients
qnorm(0.1,mean=50,sd=2.5)
qnorm(0.1)
pnorm(0.1)
source('~/.active-rstudio-document', echo=TRUE)
p_blue
data_blue_area <- data %>%
filter(xx <= T_obs)
p_blue <- data %>%
ggplot(aes(x = xx, y = yy)) +
#   geom_ribbon(data = data_blue_area, aes(ymin = 0, ymax = yy), fill = "blue", alpha = 0.5) +
geom_line() +
# geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = T_obs, linetype = "dashed", colour = "blue", alpha = 0.4) +
geom_vline(xintercept = k_alpha, linetype = "dashed", colour = "red", alpha = 0.6) +
theme_minimal() +
labs(x = "chi-squared statistic test",
y = "",
title = "p-value < 0.05: H0 is rejected") +
theme(title = element_text(size = 7))
p_blue
p_sc2 <- p_blue
p_blue
source('~/.active-rstudio-document', echo=TRUE)
o <- c("C11" = 200,
"C12" = 103,
"C13" = 54,
"C14" = 15,
"C21" = 82,
"C22" = 137,
"C23" = 79,
"C24" = 7)
n <- sum(o)
K <- 8
degrees=3
X2_obs <- 46
alpha <- 0.05
k_alpha <- qnorm(0.10,mean=50,sd=2.5)
p_val <- 1 - pnorm(46,mean=50,sd=2.5)
T_obs <- 46
xx <- seq(0, 20, length = 500)
yy <- dnorm(xx,mean=50,sd=2.5)
data <- tibble(xx, yy)
data_red_area <- data %>%
filter(xx >= k_alpha)
p_red <- data %>%
ggplot(aes(x = xx, y = yy)) +
geom_ribbon(data = data_red_area, aes(ymin = 0, ymax = yy), fill = "red", alpha = 0.5) +
geom_line() +
geom_vline(xintercept = T_obs, linetype = "dashed", colour = "blue", alpha = 0.4) +
geom_vline(xintercept = k_alpha, linetype = "dashed", colour = "red", alpha = 0.6) +
annotate("text",label="55.72",x=55.72,y=0.1,colour="blue")+
annotate("text",label="7.81",x=7.81,y=0.1,colour="red")+
theme_minimal() +
labs(x = "chi-squared statistic test",
y = "",
title = "Distribution of the test statistic and position of the observed value") +
theme(title = element_text(size = 7))
data_blue_area <- data %>%
filter(xx <= T_obs)
p_blue <- data %>%
ggplot(aes(x = xx, y = yy)) +
#   geom_ribbon(data = data_blue_area, aes(ymin = 0, ymax = yy), fill = "blue", alpha = 0.5) +
geom_line() +
# geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = T_obs, linetype = "dashed", colour = "blue", alpha = 0.4) +
geom_vline(xintercept = k_alpha, linetype = "dashed", colour = "red", alpha = 0.6) +
theme_minimal() +
labs(x = "chi-squared statistic test",
y = "",
title = "p-value < 0.05: H0 is rejected") +
theme(title = element_text(size = 7))
p_sc2 <- p_red
p_blue
xx <- seq(20, 60, length = 500)
yy <- dnorm(xx,mean=50,sd=2.5)
data <- tibble(xx, yy)
data_red_area <- data %>%
filter(xx >= k_alpha)
p_red <- data %>%
ggplot(aes(x = xx, y = yy)) +
geom_ribbon(data = data_red_area, aes(ymin = 0, ymax = yy), fill = "red", alpha = 0.5) +
geom_line() +
geom_vline(xintercept = T_obs, linetype = "dashed", colour = "blue", alpha = 0.4) +
geom_vline(xintercept = k_alpha, linetype = "dashed", colour = "red", alpha = 0.6) +
annotate("text",label="55.72",x=55.72,y=0.1,colour="blue")+
annotate("text",label="7.81",x=7.81,y=0.1,colour="red")+
theme_minimal() +
labs(x = "chi-squared statistic test",
y = "",
title = "Distribution of the test statistic and position of the observed value") +
theme(title = element_text(size = 7))
data_blue_area <- data %>%
filter(xx <= T_obs)
p_blue <- data %>%
ggplot(aes(x = xx, y = yy)) +
#   geom_ribbon(data = data_blue_area, aes(ymin = 0, ymax = yy), fill = "blue", alpha = 0.5) +
geom_line() +
# geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = T_obs, linetype = "dashed", colour = "blue", alpha = 0.4) +
geom_vline(xintercept = k_alpha, linetype = "dashed", colour = "red", alpha = 0.6) +
theme_minimal() +
labs(x = "chi-squared statistic test",
y = "",
title = "p-value < 0.05: H0 is rejected") +
theme(title = element_text(size = 7))
p_sc2 <- p_red
p_blue
p_blue <- data %>%
ggplot(aes(x = xx, y = yy)) +
geom_ribbon(data = data_blue_area, aes(ymin = 0, ymax = yy), fill = "blue", alpha = 0.5) +
geom_line() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = T_obs, linetype = "dashed", colour = "blue", alpha = 0.4) +
geom_vline(xintercept = k_alpha, linetype = "dashed", colour = "red", alpha = 0.6) +
theme_minimal() +
labs(x = "chi-squared statistic test",
y = "",
title = "p-value < 0.05: H0 is rejected") +
theme(title = element_text(size = 7))
p_blue
p_blue <- data %>%
ggplot(aes(x = xx, y = yy)) +
geom_ribbon(data = data_blue_area, aes(ymin = 0, ymax = yy), fill = "blue", alpha = 0.5) +
geom_line() +
#geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = T_obs, linetype = "dashed", colour = "blue", alpha = 0.4) +
geom_vline(xintercept = k_alpha, linetype = "dashed", colour = "red", alpha = 0.6) +
theme_minimal() +
labs(x = "chi-squared statistic test",
y = "",
title = "p-value < 0.05: H0 is rejected") +
theme(title = element_text(size = 7))
p_sc2 <- p_red
p_blue
p_blue <- data %>%
ggplot(aes(x = xx, y = yy)) +
geom_ribbon(data = data_blue_area, aes(ymin = 0, ymax = yy), fill = "blue", alpha = 0.5) +
geom_line() +
#geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = T_obs, linetype = "dashed", colour = "blue", alpha = 0.4) +
geom_vline(xintercept = k_alpha, linetype = "dashed", colour = "red", alpha = 0.6) +
theme_minimal() +
labs(x = "chi-squared statistic test",
y = "",
title = "p-value < 0.10: H0 is rejected") +
theme(title = element_text(size = 7))
p_sc2 <- p_red
p_blue
xx <- seq(35, 65, length = 500)
yy <- dnorm(xx,mean=50,sd=2.5)
data <- tibble(xx, yy)
data_red_area <- data %>%
filter(xx >= k_alpha)
p_red <- data %>%
ggplot(aes(x = xx, y = yy)) +
geom_ribbon(data = data_red_area, aes(ymin = 0, ymax = yy), fill = "red", alpha = 0.5) +
geom_line() +
geom_vline(xintercept = T_obs, linetype = "dashed", colour = "blue", alpha = 0.4) +
geom_vline(xintercept = k_alpha, linetype = "dashed", colour = "red", alpha = 0.6) +
annotate("text",label="55.72",x=55.72,y=0.1,colour="blue")+
annotate("text",label="7.81",x=7.81,y=0.1,colour="red")+
theme_minimal() +
labs(x = "chi-squared statistic test",
y = "",
title = "Distribution of the test statistic and position of the observed value") +
theme(title = element_text(size = 7))
data_blue_area <- data %>%
filter(xx <= T_obs)
p_blue <- data %>%
ggplot(aes(x = xx, y = yy)) +
geom_ribbon(data = data_blue_area, aes(ymin = 0, ymax = yy), fill = "blue", alpha = 0.5) +
geom_line() +
#geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = T_obs, linetype = "dashed", colour = "blue", alpha = 0.4) +
geom_vline(xintercept = k_alpha, linetype = "dashed", colour = "red", alpha = 0.6) +
theme_minimal() +
labs(x = "chi-squared statistic test",
y = "",
title = "p-value < 0.10: H0 is rejected") +
theme(title = element_text(size = 7))
p_sc2 <- p_red
p_blue
data_blue_area <- data %>%
filter(xx <= 46.8)
p_blue <- data %>%
ggplot(aes(x = xx, y = yy)) +
geom_ribbon(data = data_blue_area, aes(ymin = 0, ymax = yy), fill = "blue", alpha = 0.5) +
geom_line() +
#geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = T_obs, linetype = "dashed", colour = "blue", alpha = 0.4) +
geom_vline(xintercept = k_alpha, linetype = "dashed", colour = "red", alpha = 0.6) +
theme_minimal() +
labs(x = "chi-squared statistic test",
y = "",
title = "p-value < 0.10: H0 is rejected") +
theme(title = element_text(size = 7))
p_blue
p_blue <- data %>%
ggplot(aes(x = xx, y = yy)) +
geom_ribbon(data = data_blue_area, aes(ymin = 0, ymax = yy), fill = "blue", alpha = 0.5) +
geom_line() +
#geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = T_obs, linetype = "dashed", colour = "red", alpha = 0.4) +
geom_vline(xintercept = k_alpha, linetype = "dashed", colour = "blue", alpha = 0.6) +
theme_minimal() +
labs(x = "chi-squared statistic test",
y = "",
title = "p-value < 0.10: H0 is rejected") +
theme(title = element_text(size = 7))
p_sc2 <- p_red
p_blue
pnorm(46,mean=50,sd=2.5)
x <- c(49.7, 48.1, 51.7, 53.8, 51, 53.2, 52.8, 49.5, 49.2)
mean(x)
confint(x)
1-0.5/2
1-0.05/2
var(x)
qqnorm(qt(seq(0,1,10))
)
seq(0,1,10)
seq(0,1)
seq(0,1,0.01)
qt(0.5,1)
qt(0,1)
qt(0.9,1)
qqnorm(qt(seq(0,1,0.01)))
qqnorm(qt(seq(0,1,0.01),1))
qqnorm(qt(seq(0,1,0.01),df=1)
)
qqnorm(qt(seq(0,1,0.01),df=1))
qt(seq(0,1,0.01),df=1)
qqnorm(qt(seq(0.01,1,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1))
qqline
qqline(qt(seq(0.01,0.99,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1));qqline(qt(seq(0.01,0.99,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1),ylim=c(0,30));qqline(qt(seq(0.01,0.99,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1),xlim=c(-5,5));qqline(qt(seq(0.01,0.99,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1),xlim=c(-5,5),ylim=c(-50,50));qqline(qt(seq(0.01,0.99,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1),xlim=c(-5,5),ylim=c(-5,20));qqline(qt(seq(0.01,0.99,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1),xlim=c(-2,2),ylim=c(-5,20));qqline(qt(seq(0.01,0.99,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1),xlim=c(-5,5),ylim=c(-5,20));qqline(qt(seq(0.01,0.99,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1));qqline(qt(seq(0.01,0.99,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1));qqline(qt(seq(0.01,0.99,0.01),df=1),color="red")
qqnorm(qt(seq(0.01,0.99,0.01),df=1));qqline(qt(seq(0.01,0.99,0.01),df=1),col="red")
qqnorm(qt(seq(0.01,0.99,0.01),df=1));qqline(qt(seq(0.01,0.99,0.01),df=1))
qqnorm(qt(seq(0.01,0.99,0.01),df=1));qqline(qt(seq(0.01,0.99,0.01),df=1),col="red")
qqnorm(qt(seq(0.01,0.99,0.01),df=1));qqline(qt(seq(0.01,0.99,0.01),df=1),col="red",main="Student distribution vs Normal distribution")
title(main="Student distribution vs Normal distribution")
qqnorm(qt(seq(0.01,0.99,0.01),df=1));qqline(qt(seq(0.01,0.99,0.01),df=1),col="red",main="Student distribution vs Normal distribution")
qqnorm(qt(seq(0.01,0.99,0.01),df=100));qqline(qt(seq(0.01,0.99,0.01),df=100),col="red")
qnorm(0.975)
qnorm(0.5)
qnorm(1)
?qt
qt(0.975,8)
1.96*sqrt(75/1000*(1-75/1000)/1000)
0.075+1.96*sqrt(75/1000*(1-75/1000)/1000)
0.075-1.96*sqrt(75/1000*(1-75/1000)/1000)
?length
?size
nchar("Hello friend")
nchar("Hello")
nchar("Hello ")
length("Hello")
read.table("Aargau_2015.csv",header=TRUE,sep=",")
x=read.table("Aargau_2015.csv",header=TRUE,sep=",")
length(x[,"municipality"])
length(x)
length(x[,1])
length(x[[1]])
x[[1]]
length(x data$municipality)
aargau data=read.table("Aargau_2015.csv",header=TRUE,sep=",")
aargau data<-read.table("Aargau_2015.csv",header=TRUE,sep=",")
aargau$data=read.table("Aargau_2015.csv",header=TRUE,sep=",")
[aargau,data]=read.table("Aargau_2015.csv",header=TRUE,sep=",")
length(x$municipality)
mean(x[,1])
ave(x)
ave(t(x))
ave(1:3)
ave(x[,1])
sum(x[,1]-ave(x[,1]))^2
sum(x[,1]-ave(x[,1]))
x[,1]-ave(x[,1])
sum((x[,1]-ave(x[,1]))^2)
sqrt(sum((x[,1]-ave(x[,1]))^2))
var(x[,1])
sqrt(sum((x[,1]-ave(x[,1]))^2)/213)
sqrt(var(x[,1]))
mean(x[,1])
mean(x[,1],trim=0.01)
mean(x[,1],trim=0.001)
mean(x[,1],trim=0.01)
mean(x[,1],trim=0.05)
mean(x[,1],trim=0.5)
mean(x[,1],trim=0.001)
mean(x[,1],trim=0.005)
aargau_data=x
set.seed(42)
aargau_sample <- sample(x = aargau_data$population, size = 10, replace = TRUE)
aargau_sample <- sort(aargau_sample)
View(aargau_sample)
aargau_sample==aargau_sample
unique(aargau_sample)
match(1925,aargau_sample)
duplicated(aargau_sample)
aargau_sample(duplicated(aargau_sample))
aargau_sample[duplicated(aargau_sample)]
mean(aargau_sample)
summary(lmr_Chemo)
#F.E. : line (regressor), month (nested in line), sensitivity
# ∗ Are the factors crossed, nested, ... ?
#
# • Check if the class of your variables correspond to your needs:
#   – class numeric for the response: tumour
# – class numeric or integer covariates like age, ... : month,sensitivity
# – class factor or ordered for factors like subject, gender, ...: patient, line
# • Write a first version of your model that include potential interactions
#patient: i, line: l, month: m, sensitivity: s
#Y_{ilms} = \mu + \alpha_l \+ \beta_s + (\alpha_l \cdot \beta_s) + \delta_m + \gamma_s + zeta_i +epsilon_ilms
lmer_Chemo = lmer(tumour~line*sensitivity+month*line+(1|patient),data=Chemo)
summary(lmer_Chemo)
lme_Chemo = lme(fixed=tumour~line*sensitivity+month*line, random=~1|patient,data=Chemo, method="ML")
summary(lmr_Chemo)
# Initialization  ------------------------------------------------------------
#Ctrl+Shift+R to create a new section
#Ctrl+Alt+T to run only the current section
#Ctrl+Shift+Enter to run all file
#Ctrl-Shift-C to comment/uncomment quickly
library(scales)#This library allows to control the nuance of colors with the function alpha()
library(nlme) #Groupdata
library(lmerTest)
library(MuMIn)
library(pbkrtest)
library(car)
library(mvtnorm)
library(dplyr)
library(circlize)
Chemo = read.table(file="Chemotherapy-version1.csv",header=TRUE,sep=",")
attach(Chemo)
Chemo[,"line"] <- as.factor(Chemo[,"line"]);
#re-indexing months
chemo=Chemo
for (i in 1:19){
chemo[patient==LETTERS[i],"month"]=seq(1,length(chemo[patient==LETTERS[i],"month"]))
}
sapply(Chemo,class)
# • check if the model’s assumptions hold:
#   – linearity of the relation between the covariates and the response
interaction.plot(sensitivity,month,tumour)#is sensitivity affecting the month effect on tumour?
# • check if the model’s assumptions hold:
#   – linearity of the relation between the covariates and the response
interaction.plot(chemo$sensitivity,chemo$month,chemo$tumour)#is sensitivity affecting the month effect on tumour?
# • check if the model’s assumptions hold:
#   – linearity of the relation between the covariates and the response
interaction.plot(sensitivity,month,tumour)#is sensitivity affecting the month effect on tumour?
interaction.plot(month,sensitivity,tumour)#month has no interaction with sensitivity
interaction.plot(month,patient,tumour)#neither has it on any patient
interaction.plot(month,line,tumour)#HA-HAAAAA MONTH HAS AN INTERACTION WITH LINE 5
interaction.plot(line,patient,tumour)#line has an increasing effect on the patient effect on tumour
interaction.plot(month,line,tumour)#HA-HAAAAA MONTH HAS AN INTERACTION WITH LINE 5
# • check if the model’s assumptions hold:
#   – linearity of the relation between the covariates and the response
# interaction.plot(sensitivity,month,tumour)#is sensitivity affecting the month effect on tumour?
# interaction.plot(month,sensitivity,tumour)#month has no interaction with sensitivity
# interaction.plot(month,patient,tumour)#neither has it on any patient
interaction.plot(month,line,tumour)#HA-HAAAAA MONTH HAS AN INTERACTION WITH LINE 5
interaction.plot(line,patient,tumour)#line has an increasing effect on the patient effect on tumour
# • check if the model’s assumptions hold:
#   – linearity of the relation between the covariates and the response
# interaction.plot(sensitivity,month,tumour)#is sensitivity affecting the month effect on tumour?
# interaction.plot(month,sensitivity,tumour)#month has no interaction with sensitivity
# interaction.plot(month,patient,tumour)#neither has it on any patient
interaction.plot(line,month,tumour)#HA-HAAAAA MONTH HAS AN INTERACTION WITH LINE 5
interaction.plot(month,line,tumour)#HA-HAAAAA MONTH HAS AN INTERACTION WITH LINE 5
# • check if the model’s assumptions hold:
#   – linearity of the relation between the covariates and the response
# interaction.plot(sensitivity,month,tumour)#is sensitivity affecting the month effect on tumour?
# interaction.plot(month,sensitivity,tumour)#month has no interaction with sensitivity
# interaction.plot(month,patient,tumour)#neither has it on any patient
interaction.plot(line,month,tumour)#HA-HAAAAA MONTH HAS AN INTERACTION WITH LINE 5
interaction.plot(month,line,tumour)#HA-HAAAAA MONTH HAS AN INTERACTION WITH LINE 5
interaction.plot(month,line,sensitivity)#HA-HAAAAA MONTH HAS AN INTERACTION WITH LINE
interaction.plot(line,month,sensitivity)#HA-HAAAAA MONTH HAS AN INTERACTION WITH LINE
interaction.plot(month,line,tumour)#HA-HAAAAA MONTH HAS AN INTERACTION WITH LINE
interaction.plot(month,line,sensitivity)#HA-HAAAAA MONTH HAS AN INTERACTION WITH LINE
interaction.plot(line,month,sensitivity)#HA-HAAAAA MONTH HAS AN INTERACTION WITH LINE
# • check if the model’s assumptions hold:
#   – linearity of the relation between the covariates and the response
#sensitivity and tumour should be used as response variable
interaction.plot(line,month,tumour)#HA-HAAAAA MONTH HAS AN INTERACTION WITH LINE
interaction.plot(month,line,tumour)#HA-HAAAAA MONTH HAS AN INTERACTION WITH LINE
# • check if the model’s assumptions hold:
#   – linearity of the relation between the covariates and the response
#sensitivity and tumour should be used as response variable
interaction.plot(line,month,tumour)#HA-HAAAAA MONTH HAS AN INTERACTION WITH LINE
interaction.plot(month,line,tumour)#HA-HAAAAA MONTH HAS AN INTERACTION WITH LINE
#interaction between line and sensitivity
interaction.plot(sensitivity,line,tumour)
#interaction between line and sensitivity
interaction.plot(line,sensitivity,tumour)
#interaction between line and sensitivity
interaction.plot(sensitivity*,tumour)
#interaction between line and sensitivity
interaction.plot(sensitivity,line,tumour)
#interaction between line and sensitivity
interaction.plot(line,sensitivity,tumour)
interaction.plot(sensitivity,line,tumour)
Chemo[,"month"]  <- as.factor(Chemo[,"month"]);
lmer_Chemo = lmer(tumour~line*sensitivity+month*line+(month|patient),data=Chemo)
summary(lmer_Chemo)
?isSingular
Chemo[,"month"]  <- as.integer(Chemo[,"month"]);
sapply(Chemo,class)
lmer_Chemo = lmer(tumour~line*sensitivity+month*line+(month|patient),data=Chemo)
summary(lmer_Chemo)
Chemo[,"month"]  <- as.factor(Chemo[,"month"]);
lmer_Chemo = lmer(tumour~line*sensitivity+month*line+(month|patient),data=Chemo)
summary(lmer_Chemo)
# • check if the model’s assumptions hold:
#   – linearity of the relation between the covariates and the response
#sensitivity and tumour should be used as response variable
#clear interaction between month and line to determine sensitivity or tumour
interaction.plot(line,month,tumour)
interaction.plot(month,line,tumour)
lmer_Chemo = lmer(tumour~line*sensitivity+month*line+sensitivity*month+(month|patient),data=Chemo)
summary(lmer_Chemo)
interaction.plot(line,month,sensitivity)
interaction.plot(month,line,tumour)
#interaction between line and sensitivity?
interaction.plot(line,sensitivity,tumour)
# • check if the model’s assumptions hold:
#   – linearity of the relation between the covariates and the response
#sensitivity and tumour should be used as response variable
#clear interaction between month and line to determine sensitivity or tumour
interaction.plot(line,month,tumour)
interaction.plot(month,line,sensitivity)
# • check if the model’s assumptions hold:
#   – linearity of the relation between the covariates and the response
#sensitivity and tumour should be used as response variable
#clear interaction between month and line to determine sensitivity or tumour
interaction.plot(line,month,tumour)
interaction.plot(line,month,sensitivity)
interaction.plot(line,month,sensitivity)
interaction.plot(line,month,sensitivity)
interaction.plot(line,month,sensitivity)
interaction.plot(month,line,sensitivity)
interaction.plot(month,line,tumour)
interaction.plot(month,line,tumour)
lmer_Chemo = lmer(tumour~line*sensitivity+month*line+(month|patient),data=Chemo)
summary(lmer_Chemo)
# to equal variance is to use the ANOVA tests
anova(lme_Chemo,type="I")#effect of sequentially adding each new element
lme_Chemo = lme(fixed=tumour~line*sensitivity+month*line, random=~month|patient,data=Chemo, method="ML")
summary(lmr_Chemo)
lme_Chemo = lme(fixed=tumour~line*sensitivity+month*line, random=~1|patient,data=Chemo, method="ML")
summary(lmr_Chemo)
summary(lme_Chemo)
summary(lmer_Chemo)
summary(lme_Chemo)
# to equal variance is to use the ANOVA tests
anova(lme_Chemo,type="I")#effect of sequentially adding each new element
# to equal variance is to use the ANOVA tests
anova(lme_Chemo,type="sequential")#effect of sequentially adding each new element
# sensitivity, its interaction and the interaction of line and month not significant
anova(lme_Chemo,type="II")#effect of each element to the whole
# sensitivity, its interaction and the interaction of line and month not significant
Anova(lme_Chemo,type="II")#effect of each element to the whole
# to equal variance is to use the ANOVA tests
anova(lme_Chemo,type="sequential")#effect of sequentially adding each new element
# sensitivity, its interaction and the interaction of line and month not significant
Anova(lme_Chemo,type="II")#effect of each element to the whole
# all become more significant, line:sensitivity is statistically significant
Anova(lme_Chemo,type="III")#effect of each element to the whole (with interactions)
